name: Build & Push to ttl.sh

on:
  push:
    branches:
      - 'main'
      - 'release/*'

  workflow_dispatch:
    inputs:
      imageName:
        description: The name of the image (used for tag)
        required: true
        default: ecp_equipment_service
      imageDuration:
        description: The lifetime of the image on the repository
        required: true
        default: 1h

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Start containers
      run: docker-compose -f "docker-compose.yml" up -d --build

    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down


   #   - name: "Build image"
     #   working-directory: ./DEMO
       # run: docker compose -f docker-compose.yml build

#      - name: "Set up JDK 17"
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17

 #     - name: "Build with Maven"
 #       run: mvn clean package

 #     - name: "Build image tag from inputs"
#        if: ${{ github.event_name == 'workflow_dispatch' }}
 #       run: |
 #         IMAGE_TAG=ttl.sh/${{ github.event.inputs.imageName }}:${{ github.event.inputs.imageDuration }}
#          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

#      - name: "Build image tag from env"
#        if: ${{ github.event_name != 'workflow_dispatch' }}
#        run: |
#          IMAGE_TAG=ttl.sh/${{ env.TTL_IMAGE_NAME }}:${{ env.TTL_IMAGE_DURATION }}
#          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

#      - name: "Build docker image ${{ env.IMAGE_TAG }}"
#        run: |
 #         docker build -t ${{ env.IMAGE_TAG }} .

 #     - name: "Push docker image ${{ env.IMAGE_TAG }}"
 #       run: |
 #         docker push ${IMAGE_TAG}
