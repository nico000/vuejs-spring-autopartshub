name: Deploy to ttl.sh

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_BACKEND: 'false'
      DEPLOY_FRONTEND: 'false'
      DEPLOY_MONGODB: 'true'


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: "Set up JDK 17"
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: "Build with Maven"
        working-directory: ./backend
        run: mvn clean package

      - name: Display directory contents
        run: ls -R ./backend

      - name: Build Docker images
        run: |
          docker-compose -f ./DEMO/docker-compose.yml build

      - name: Set up Docker Compose
        run: |
          docker-compose -f ./DEMO/docker-compose.yml up -d
          sleep 30  # Give services some time to start

      - name: Display Docker networks
        run: docker network ls

      - name: Display Docker network inspect
        run: docker network inspect demo_autoparts_network

      - name: Deploy backend image to ttl.sh
        if: env.DEPLOY_BACKEND == 'true'
        run: |
          docker tag autoparts-back:0.1.0 ttl.sh/autoparts-back:1h
          docker push ttl.sh/autoparts-back:1h

      - name: Deploy frontend image to ttl.sh
        if: env.DEPLOY_FRONTEND == 'true'
        run: |
          docker tag autoparts-front:0.1.0 ttl.sh/autoparts-front:1h
          docker push ttl.sh/autoparts-front:1h

      - name: Test MongoDB Connection
        run: |
          # Wait for MongoDB to be ready
          sleep 10
          
          # Test MongoDB connection
          # docker exec mongo mongodb://mongo:27017/autoparts_service_db --eval "printjson(db.serverStatus())
          # docker exec mongo mongo --eval "printjson(db.serverStatus())"
          

      - name: Deploy MongoDB image to ttl.sh
        if: env.DEPLOY_MONGODB == 'true'
        run: |
          docker tag mongo:4.4 ttl.sh/autoparts-db:1h
          docker push ttl.sh/autoparts-db:1h

      - name: Clean up
        run: |
          docker-compose -f ./DEMO/docker-compose.yml down